Vectors in C++
Vectors are dynamic arrays in C++ that can resize themselves automatically when elements are added or removed. They are part of the C++ Standard Template Library (STL) and provide a flexible way to work with collections of data.

Key Features of Vectors
- Dynamic size: Vectors can grow or shrink dynamically as elements are added or removed.
- Random access: Vectors provide random access to elements, allowing you to access any element directly using its index.
- Insertion and deletion: Vectors support insertion and deletion of elements at any position, including the beginning and end.

Vector Operations
- push_back(): adds an element to the end of the vector
- insert(): inserts an element at a specified position
- erase(): removes an element from a specified position
- size(): returns the number of elements in the vector
- capacity(): returns the maximum number of elements the vector can hold without resizing
- resize(): changes the size of the vector

Vector Example

#include <iostream>
#include <vector>

int main() {
    std::vector<int> vec = {1, 2, 3, 4, 5};

    // Add an element to the end
    vec.push_back(6);
    std::cout << "Vector: ";
    for (int num : vec) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    // Insert an element at a specified position
    vec.insert(vec.begin() + 2, 10);
    std::cout << "Vector after insertion: ";
    for (int num : vec) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    // Remove an element from a specified position
    vec.erase(vec.begin() + 2);
    std::cout << "Vector after deletion: ";
    for (int num : vec) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    return 0;
}

